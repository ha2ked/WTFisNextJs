"use client";import*as e from"react";import C from"classnames";import*as t from"@radix-ui/react-checkbox";import{useControllableState as f}from"@radix-ui/react-use-controllable-state";import{checkboxPropDefs as d}from"./checkbox.props.js";import{ThickCheckIcon as l,ThickDividerHorizontalIcon as x}from"./icons.js";import{extractProps as P}from"../helpers/extract-props.js";import{marginPropDefs as b}from"../props/margin.props.js";const c=e.forwardRef((p,i)=>{const{className:s,color:h,checked:a,defaultChecked:o,onCheckedChange:m,...n}=P(p,d,b),[r,k]=f({prop:a,defaultProp:o,onChange:m});return e.createElement(t.Root,{"data-accent-color":h,...n,defaultChecked:o,checked:r,onCheckedChange:k,asChild:!1,ref:i,className:C("rt-reset","rt-BaseCheckboxRoot","rt-CheckboxRoot",s)},e.createElement(t.Indicator,{asChild:!0,className:"rt-BaseCheckboxIndicator rt-CheckboxIndicator"},e.createElement(r==="indeterminate"?x:l,null)))});c.displayName="Checkbox";export{c as Checkbox};
//# sourceMappingURL=checkbox.js.map
